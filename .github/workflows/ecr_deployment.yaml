name: Deploy to ECR

on:
  push:
    branches:
      #- main
      - 1611-create-elastic-container-service

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # - name: Login to Amazon ECR
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v1
      #   with:
      #     region: us-east-1

      # - name: Authenticate Docker Registry for ECR
      #   run: aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 339712971032.dkr.ecr.us-east-1.amazonaws.com

      - uses: hashicorp/setup-terraform@v2.0.3
        with:
          terraform_version: 1.3.3
      - name: Init Terraform
        working-directory: ./terraform/implementation/ecs
        env:
          ENVIRONMENT: dev
          BUCKET: infra-tfstate-alis-default-aizwjxuh
          DYNAMODB_TABLE: infra-tfstate-lock-alis-default-aizwjxuh
          REGION: us-east-1
          OWNER: alis
          PROJECT: infra
        shell: bash
        run: |
          touch $ENVIRONMENT.tfvars
          echo "owner = \"$OWNER\""
          echo "project = \"$PROJECT\""
          echo "region = \"$REGION\""
          terraform init \
          -migrate-state \
          -var-file="$ENVIRONMENT.tfvars" \
          -backend-config "bucket=$BUCKET" \
          -backend-config "dynamodb_table=$DYNAMODB_TABLE" \
          -backend-config "region=$REGION"
          terraform apply -var-file="$ENVIRONMENT.tfvars"

      # - name: Apply Terraform
      #   working-directory: ./terraform/implementation/ecs
      #   env:
      #     ENVIRONMENT: value
      #   shell: bash
      #   run: |
      #     terraform apply -var-file="$ENVIRONMENT.tfvars"
